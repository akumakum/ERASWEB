spring.application.name=erasweb
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.enabled=true
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:postgresql://dpg-crbgkhd6l47c73d5fs00-a.singapore-postgres.render.com/eras_postgres_db
spring.datasource.url=jdbc:postgresql://dpg-cs0a99i3esus738v30g0-a.singapore-postgres.render.com/eras_postgres_db2

#spring.datasource.username=eras_postgres_db_user
spring.datasource.username=eras_postgres_db2_user

#spring.datasource.password=3LWllUKCdWT6KHPXmKtsGpawXN1mCJ1P
spring.datasource.password=uXdXKrO7qk2ha0fYAQKvqCydTIbjAY0J

spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# ==============================
# Session Management
#===============================
#server.servlet.session.timeout=60
# ==============================
# Spring Security
#===============================
spring.main.allow-circular-references=true
#================================================
#locale date settngs
#================================================
spring.mvc.format.date=yyyy-MM-dd
spring.mvc.format.time=HH:mm:ss
spring.mvc.format.date-time=yyyy-MM-dd'T'HH:mm:ss


#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web=INFO
# Alternatively, if you want to specify a directory and let Spring Boot create default log files
#logging.file.path=C:\\tmp\\tomcatlogs

# Set the logging level to INFO
logging.level.root=INFO

# Specify the file where logs should be written

# Optionally set the pattern for log format (including log level)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%level] %logger{10} [%thread] %msg%n

logging.file.name=/app/logs/app.log
logging.file.path=/app/logs
#logging.level.org.springframework=DEBUG
#logging.level.com.eras.erasweb=INFO
#logging.level.root=ERROR

#logging.level.root=info
#logging.level.org.springframework.web=info


# Log pattern (optional, if you want to customize log format)
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

server.tomcat.accesslog.enabled=true
#server.tomcat.accesslog.directory=c:\\tmp\\tomcatlogs
#logging.file.name=erasweb.log
server.port=8082

server.servlet.session.timeout=30m

#==========================================================
# ERAS Specific Variables
#==========================================================
backup.pguser=postgres
backup.pgdb=ERAS
backup.pgpassword=###422rjeyO
backup.dir=C:\\tmp\\ERAS-DB-Backup


#==========================================================
# ERAS Variable : End
